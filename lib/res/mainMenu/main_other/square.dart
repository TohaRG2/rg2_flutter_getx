
import 'package:rg2/models/phases.dart';

class Square implements Phase {
  @override
  int count = square_title.length;

  @override
  String phase = "SQUARE";

  @override
  List<String> titles() => square_title;

  @override
  List<String> icons() => square_icon;

  @override
  List<String> descriptions() => square_descr;

  @override
  List<String> urls() => square_url;

  @override
  List<String> comments() => List.filled(count, "");

///==================================================


    static const square_title = [
        square_st1_title,
        square_st2_title,
        square_st3_title,
        square_st4_title,
        square_st5_title,
        square_st6_title,
        square_st7_title,
    ];

    static const square_icon = [
        "square_1",
        "square_2",
        "square_3",
        "square_4",
        "square_5",
        "square_6",
        "square_7",
    ];
    
    static const square_descr = [
        square_st1_descr,
        square_st2_descr,
        square_st3_descr,
        square_st4_descr,
        square_st5_descr,
        square_st6_descr,
        square_st7_descr,
    ];


    static const square_url = [
        square_st1_url,
        square_st2_url,
        square_st3_url,
        square_st4_url,
        square_st5_url,
        square_st6_url,
        square_st7_url,
    ];
    
    static const square_st1_title = "Этап 1. Дружный детский сад.";
    static const square_st1_descr = """
    <p>Начнем с того, что square-1 это очень необычная шарнирная головоломка, которая в собранном
    виде имеет форму куба, а вот в разобранном виде
    <a href="rg2://ytplay?time=0:24&link=J18IoknpBAo">меняет свою форму</a> и может выглядеть
    очень необычно. Например, так:</p>
    <p style="text-align:center"><img src="square_1_1.xml"></p>

    <p>Цель данной обучалки, научить собирать Square-1 используя МИНИМАЛЬНЫЙ набор
    МАКСИМАЛЬНО простых алгоритмов, для облегчения запоминания которых, можно использовать
    присказки от Максима.</p>

    <p>Square состоит из восьми <a href="rg2://ytplay?time=0:38&link=ZxkplMjxShY">угловых</a>
    (больших) элементов, восьми <a href="rg2://ytplay?time=0:47&link=ZxkplMjxShY">реберных</a>
    (маленьких) элементов по четыре на верхней и нижней грани. А так же среднего слоя состоящего
    из <a href="rg2://ytplay?time=0:53&link=ZxkplMjxShY">двух элементов</a> (центральных плит).</p>

    Для сборки (разборки) скваера используются всего лишь три движения:<br/>

    1. Вращения <a href="rg2://ytplay?time=5:54&link=ZxkplMjxShY">верхней грани:</a>
    <p style="text-align:center"><img src="square_1_2.xml"></p>

    2. Вращения <a href="rg2://ytplay?time=5:57&link=ZxkplMjxShY">нижней грани:</a>
    <p style="text-align:center"><img src="square_1_3.xml"></p>

    3. И вот такое интересное движение, называемое <a href="rg2://ytplay?time=6:00&link=ZxkplMjxShY">слайс.</a>
    <p style="text-align:center"><img src="square_1_4.xml"></p>

    который меняет местами половину элементов, находящихся снизу, с половиной элементов, находящихся сверху.
    Причем, слайс всегда делается только на 180 градусов. И надо учесть, что слайс можно сделать
    далеко <a href="rg2://ytplay?time=7:03&link=ZxkplMjxShY">не из любого положения</a> головоломки.

    <p>Теперь о языке вращений. Формулы для скваера выглядят примерно так:<br/>
    <b>(0,-1)/(-3,0)/(4,1)</b></p>

    <a href="rg2://ytplay?time=1:30&link=J18IoknpBAo">Две цифры в скобках.</a>
    Первая цифра в скобках обозначает на сколько маленьких элементов необходимо повернуть верхнюю
    грань, вторая цифра - на сколько повернуть нижнюю. Положительное число означает, что грань надо
    повернуть по часовой стрелке, отрицательное - против часовой стрелки. Т.е. поворот на одно ребро
    означает поворот на одну единицу, а поворот на один угол - <a href="rg2://ytplay?time=1:38&link=J18IoknpBAo">на две единицы.</a>
    Например так:
    <p style="text-align:center"><img src="square_1_5.xml"> (1,2) <img src="square_1_6.xml"></p>

    Слэш (косая черта) в формуле означает <a href="rg2://ytplay?time=1:25&link=J18IoknpBAo">слайс.</a>
    <p style="text-align:center"><img src="square_1_6.xml"> / <img src="square_1_7.xml"></p>

    Если не очень понятно, то посмотрите более подробный <a href="rg2://ytplay?time=1:55&link=J18IoknpBAo">пример в видео.</a><br/><br/>

    Еще несколько слов о том, <a href="rg2://ytplay?time=5:00&link=ZxkplMjxShY">как надо держать скваер.</a>
    Взять его надо так, чтобы левая плита смотрела на нас маленькой стороной (обычно красной).
    <p style="text-align:center"><img src="square_1_8.xml"> или <img src="square_1_9.xml"></p>

    Т.е. передний кусочек левой плиты должен быть либо
    <a href="rg2://ytplay?time=5:07&link=ZxkplMjxShY">меньше,</a>
    либо <a href="rg2://ytplay?time=5:14&link=ZxkplMjxShY">равен</a> переднему кусочку правой плиты.

    <p>Теперь перейдем непосредственно к сборке. Давайте представим, что наш скваер это двухэтажное
    здание с толстой бетонной звукоизолирующей плитой посередине. Представим, что реберные (маленькие)
    элементы - это дети, а большие (угловые) элементы - это взрослые. А линия по которой делается слайс -
    это доска.</p>

    И первое что нам необходимо, это сделать на верхнем этаже нашего здания детский сад, а на нижнем - офис.
    Т.е. собрать \"взрослых\" внизу, а всех \"детей\" наверху. Но т.к. дети одни сидеть не могут,
    то с ними будут еще двое взрослых воспитателей. Причем детей надо поставить так, чтобы они
    образовывали \"дружный детский сад\", т.е. стояли все вместе.
    <p style="text-align:center"><img src="square_1_10.xml"></p>

    Сделать это несложно, просто стараемся собирать всех детей на левой верхней половине скваера, там у нас
    должно поместиться шесть детей, оставшиеся два, вместе с двумя взрослыми,окажутся на правой
    половинке. Если у вас получилась такая ситуация, значит можно переходить к следующему этапу.
    Но у вас может получиться и вот такая ситуация, когда вроде и все дети наверху, но один стоит
    как-то отдельно от всех. Назовем эту ситуацию - недружный детский сад.
    <p style="text-align:center"><img src="square_1_11.xml"></p>

    <p>В этом случае, надо поставить скваер так, чтобы воспитатели смотрели направо и чуть больше назад,
    чем вперед, т.е. чтобы спереди справа у доски стоял один ребенок. Сделать <b>слайс,</b> сверху сзади вывести двух детей
    на правую сторону (к доске), а снизу поменять детей у доски, <b>слайс,</b> сверху дальнего взрослого
    увести на левую половину, а снизу детей перевести к другой части доски, <b>слайс,</b> всех детей сверху
    перевести на левую половину, слайс. Дружный детский сад собран.</p>

    Алгоритм: <b>/(2,-2)/(-3,4)/(2,0)/</b><br/><br/>

    <p>P.S. Можно попробовать собирать не детский сад наверху, а офис снизу, сделать это немного
    проще: собрать блок из трех взрослых, поставить его снизу слева. Собрать еще один блок из
    трех взрослых и поставить его снизу справа. Но в этом случае наверху может получиться не две,
    а пять различных ситуаций. Две приведенные выше и еще три: две из которых в три хода приводятся
    к дружному детскому саду, а одна в три хода к недружному, путем смены двух детей, стоящих рядом,
    на одного взрослого.</p>
    """;
    static const square_st1_url = "ZxkplMjxShY";

    static const square_st2_title = "Этап 2. Приведение к кубу.";
    static const square_st2_descr = """
    <p>Второй этап это приведение к кубу или кубшейп (cubeshape). Наша задача сделать так, чтобы
    головоломка приобрела форму куба.</p>
    <p>Для этого необходимо взять скваер взрослыми на верхней грани
    <a href="rg2://ytplay?time=1:38&link=IdrEmzovc68">к себе.</a>
    Как повернута нижняя грань не имеет значения.</p>
    <p style="text-align:center"><img src="square_2_1.xml"></p>

    <p>И <a href="rg2://ytplay?time=2:16&link=IdrEmzovc68">делаем слайс,</a> получаем по четыре
    взрослых и четыре ребенка на <a href="rg2://ytplay?time=2:22&link=IdrEmzovc68">верхней и нижней стороне.</a>
    Сверху и снизу <a href="rg2://ytplay?time=2:43&link=IdrEmzovc68">ставим детей назад</a>
    (взрослые встают на защиту), и снова делаем слайс. Теперь сверху уже дети встают
    <a href="rg2://ytplay?time=3:15&link=IdrEmzovc68">вперед и назад,</a>
    а снизу еще раз взрослые встают <a href="rg2://ytplay?time=3:25&link=IdrEmzovc68">вперед и назад.</a>
    Еще один слайс. Теперь снова на обоих гранях детей, которые стоят парой,
    <a href="rg2://ytplay?time=3:52&link=IdrEmzovc68">ставим назад.</a>
    И делаем еще один слайс. Profit!</p>

    Алгоритм: <b>/(2,4)/(1,2)/(-3,-3)/</b>

    <p>Если в результате вы получили не совсем куб, а <a href="rg2://ytplay?time=4:07&link=IdrEmzovc68">нечто подобное,</a></p>
    <p style="text-align:center"><img src="square_2_2.xml"></p>

    <p>то на это можно не обращать внимания. Хотя если вас это напрягает, то выполните очень
    <a href="rg2://ytplay?time=4:29&link=IdrEmzovc68">простой алгоритм:</a>
    <b>слайс,</b> верхняя грань на 180 градусов, <b>слайс,</b> снова верхняя на 180 градусов
    и еще один слайс.</p>

    <p>Алгоритм: <b>/(6,0)/(6,0)/</b></p>

    <p>Вот теперь уже точно получаем куб.</p>

    <p>P.S. Естественно, что есть алгоритмы кубшейпа для каждой из пяти ситуаций , которые могут встретиться
    после создания дружного офиса на прошлом этапе, минуя создание \"дружного детского сада\". Возможно
    они будут рассмотрены чуть позднее в серии Ускорений для Square-1, а пока можно обойтись и без них.</p>
    """;
    static const square_st2_url = "IdrEmzovc68";

    static const square_st3_title = "Этап 3. Красим углы";
    static const square_st3_descr = """
    <p>На данном этапе займемся ориентацией углов, своего рода OLL\'ом для углов. Т.е. наша
    задача поставить все белые углы на верхнюю грань, а все желтые углы на нижнюю.</p>

    <p>На самом деле это еще один очень интуитивный этап. Действия очень похожи на сборку центров
    в кубике 4х4. Надо только понять, что для того, чтобы наш скваер не поменял кубическую
    форму, надо перед слайсом попросить одного ребенка на верхней или нижней грани
    <a href="rg2://ytplay?time=3:49&link=KI-X-0mMH4U">немножко подвинуться.</a></p>
    Базовый алгоритм, когда нужно установить на место один угол, выглядит так. Ставим ненужный
    угол на верхней грани от себя слева, а на нижней от себя справа.
    <p style="text-align:center"><img src="square_3_1.xml"></p>

    Теперь просим подвинуться одного ребенка, <b>слайс,</b> сдвигаем пару желтых углов в правую часть, <b>слайс,</b>
    возвращаем верхнюю грань на место.<br/><br/>

    Алгоритм: <b>(1,0)/(3,0)/(-1,0)</b>

    <p>Ну или сделать как в <a href="rg2://ytplay?time=5:26&link=KI-X-0mMH4U">видео у Максима,</a>
    на верхней грани ставим элемент назад справа, а на нижней назад слева. И все тоже самое, но
    через нижнюю грань.</p>
    <p style="text-align:center"><img src="square_3_2.xml"></p>

    <p>Пододвигаем низ на один элемент, <b>слайс,</b> белые элементы на нижней грани на правую сторону, <b>слайс,</b>
    нижнюю грань на место. Но на мой взгляд, первый алгоритм предпочтительней, т.к. все основные действия
    делаются на верхней грани, что гораздо удобнее.</p>

    Алгоритм: <b>(0,-1)/(0,-3)/(0,1)</b>
    """;
    static const square_st3_url = "KI-X-0mMH4U";

    static const square_st4_title = "Этап 4. Красим ребра";
    static const square_st4_descr = """
    <p>Теперь мы должны поменять местами детей (ребра) так, чтобы они совпадали по цветам со взрослыми
    (углами). Т.е. сверху все были белые, а снизу желтые. Можно сказать - OLL этап для ребер.</p>

    <p>Базовый алгоритм для этого этапа, который меняет одного ребенка сверху, на одного снизу.
    Верхнего ребенка <a href="rg2://ytplay?time=3:06&link=e2fd9kZdIao">ставим справа</a>
    и нижнего тоже <a href="rg2://ytplay?time=3:15&link=e2fd9kZdIao">справа.</a></p>
    <p style="text-align:center"><img src="square_4_1.xml"></p>
    
    <p>Пододвигаем <a href="rg2://ytplay?time=3:33&link=e2fd9kZdIao">верхнего ребенка,</a>
    <b>слайс,</b> снизу двигаем ребенка и взрослого, <b>слайс,</b> еще раз просим подвинуться снизу ребенка и
    взрослого, <b>слайс,</b> верхнего ребенка возвращаем на место, а нижнего сдвигаем, <b>слайс,</b> верхнего
    ребенка опять сдвигаем, а снизу сдвигаем сразу ребенка, взрослого и еще одного ребенка (в другую
    сторону), <b>слайс,</b> снизу еще двигаем ребенка и взрослого, <b>слайс,</b> ставим на место верхнюю грань.
    </p>

    Алгоритм: <b>(1,0)/(0,-3)/(0,-3)/(-1,-1)/(1,4)/(0,3)/(-1,0)</b>
    """;
    static const square_st4_url = "e2fd9kZdIao";

    static const square_st5_title = "Этап 5. Перестановка углов";
    static const square_st5_descr = """
    <p>Как вы наверно уже поняли, данный этап можно назвать PLL для взрослых. Т.е. будем
    ставить взрослых на свои места.</p>

    <p>Как определить, какие углы стоят на месте, а какие нет? Первое, что надо сделать, это попытаться
    найти какие-нибудь \"глазки\". Если \"глазки\" есть, значит будем считать, что эти два элемента
    уже и стоят на своих местах. А два других угла надо поменять местами.</p>

    Сначала займемся <a href="rg2://ytplay?time=1:51&link=MzNy1X5PI4E">нижней стороной.</a>
    Находим глазки на нижней стороне и поворачиваем нижнюю
    грань глазками <a href="rg2://ytplay?time=2:05&link=MzNy1X5PI4E">от себя.</a>
    Т.е. менять местами будем два ближних нижних угла.
    <p style="text-align:center"><img src="square_5_1.xml"></p>

    <p>Теперь выполняем очень простой алгоритм, в котором всегда двигаем
    взрослого вместе с ребенком, т.е. все вращения делаются на 3 единицы. Делаем слайс, уводим
    и верх и низ налево, слайс, возвращаем низ на место, слайс, возвращаем верх на место, слайс,
    снова уводим верх налево, слайс, возвращаем верх на место, слайс.</p>

    Алгоритм: <b>/(3,-3)/(0,3)/(-3,0)/(3,0)/(-3,0)/</b>

    <p>Если глазок на нижней <a href="rg2://ytplay?time=6:11&link=MzNy1X5PI4E">грани нет,</a>
    значит надо выполнить алгоритм из любого положения скваера
    и глазки появятся. А что делать, когда глазки есть - мы уже знаем.</p>

    <p>Переходим к расстановке углов на верхней грани. Чтобы не запоминать новый алгоритм, можно
    воспользоваться советом от Максима и просто перевернуть кубик, превратив тем самым нижнюю
    сторону <a href="rg2://ytplay?time=3:49&link=MzNy1X5PI4E">в верхнюю.</a>
    И чтобы выполнить алгоритм, сдвигаем чуть-чуть <a href="rg2://ytplay?time=4:04&link=MzNy1X5PI4E">средний слой влево.</a>
    Ставим глазками <a href="rg2://ytplay?time=4:20&link=MzNy1X5PI4E">снизу сзади.</a>
    И выполняем тот же самый <a href="rg2://ytplay?time=4:35&link=MzNy1X5PI4E">алгоритм.</a></p>

    Ну или просто немного адаптируем алгоритм, чтобы не переворачивать наш скваер.
    <p style="text-align:center"><img src="square_5_2.xml"></p>

    <p>Все тоже самое, но просто меняем вращения верхней и нижней граней. Т.е. Делаем <b>слайс,</b> уводим
    и верх и низ налево, <b>слайс,</b> возвращаем ВЕРХ на место, <b>слайс,</b> возвращаем НИЗ на место, <b>слайс,</b>
    снова уводим НИЗ налево, <b>слайс,</b> возвращаем НИЗ на место, <b>слайс.</b></p>

    Алгоритм: <b>/(3, -3)/(-3,0)/(0,3)/(0,-3)/(0,3)/</b>
    """;
    static const square_st5_url = "MzNy1X5PI4E";

    static const square_st6_title = "Этап 6. Перестановка ребер";
    static const square_st6_descr = """
    Ну и теперь нам осталось поставить на свое место детей (ребра). И как нетрудно догадаться, место
    детей рядом с их родителями, т.е. между углами своего цвета.
    Довольно сложный для понимания этап. Т.к. алгоритм данного этапа меняет местами ребра не на одной,
    а на обеих гранях.
    <p style="text-align:center"><img src="square_6_1.xml"></p>

    Т.е. если количество неверно стоящих ребер на верхней и нижней гранях не совпадает,
    то наверняка придется разрушить то, что уже собрано, а потом собрать это снова.

    <p>Теперь о самом алгоритме. Назовем его <a href="rg2://ytplay?time=4:28&link=HmBZUI4dWhw">\"Отцы и дети\".</a></p>

    <p>Для решения этой проблемы
    и взрослые, и дети должны идти на какие-то <a href="rg2://ytplay?time=5:05&link=HmBZUI4dWhw">уступки.</a>
    И в нашем случае взрослый (левый нижний)
    первым идет на уступку, <b>слайс,</b> и теперь он возвращается обратно, но уже с ребенком, <b>слайс,</b>
    и теперь оба ребенка (верхний и нижний), взяв пример с родителей, идут на уступки, <b>слайс,</b>
    верхний ребенок встает на место, а снизу взрослый идет на уступки, <b>слайс,</b> доворот до куба.</p>

    <a href="rg2://ytplay?time=8:26&link=HmBZUI4dWhw&alg=(0,2)/(0,-3)/(1,1)/(-1,2)/(0,1)">Алгоритм:</a> <b>(0,2)/(0,-3)/(1,1)/(-1,2)/(0,1)</b>

    <p>Ставим несобранные элементы сзади и справа, и повторяем данный алгоритм
    <a href="rg2://ytplay?time=6:32&link=HmBZUI4dWhw">до тех пор,</a>
    пока скваер не соберется или не получится ситуация, когда останутся несобранными два ребра
    только на одной грани. А что делать в этом случае - в следующей
    части обучалки.</p>
    """;
    static const square_st6_url = "HmBZUI4dWhw";

    static const square_st7_title = "Паритеты";
    static const square_st7_descr = """
    <p>1. Если остались несобранными только два ребра <a href="rg2://ytplay?time=8:02&link=KBEsVhJtudg">на одной стороне,</a>
    или вы сразу видите, что количество повторений алгоритма из предыдущей части для одной стороны не совпадает с
    количеством для другой, например, на одной стороне не на месте два ребра, а на другой три, то
    в этом случае придется применить другой, более длинный алгоритм.</p>

    <p>Как было сказано в первой части данной обучалки, алгоритмы, приведенные здесь, максимально
    облегчены для запоминания, а алгоритм для перестановки двух ребер только на одной грани
    довольно длинный и сложный для запоминания, поэтому воспользуемся другим алгоритмом, который
    выравнивает соотношение несобранных ребер на верхней и нижней гранях. А именно, меняет местами
    два ребра снизу и три сверху. Вот так:</p>
    <p style="text-align:center"><img src="square_7_1.xml"></p>

    <p>Все <a href="rg2://ytplay?time=2:50&link=KBEsVhJtudg">начинается со слайса,</a>
    верхний родитель с ребенком уходят налево, а нижний родитель с
    ребенком направо, слайс, сверху один ребенок налево, слайс, теперь он возвращается назад, но уже
    еще с одним ребенком, слайс, еще и два взрослых идут следом за детьми, слайс, теперь начинаем
    работать с низом - сначала двое взрослых идут налево, слайс, за ними еще двое детей и один
    взрослый идут налево, слайс, еще один взрослый их догоняет, слайс, пара возвращается
    с ребенком, слайс, отменяем первые два хода.</p>

    Алгоритм: <b>/(3,3)/(1,0)/(-2,0)/(-4,0)/(0,-4)/(0,-4)/(0,-2)/(0,5)/(-3,-3)/</b>

    <p>2. Если так получилось, что вы собрали желтую сторону сверху, или еще по какой-то причине
    ваш скваер выглядит <a href="rg2://ytplay?time=9:58&link=KBEsVhJtudg">подобным образом:</a></p>
    <p style="text-align:center"><img src="square_7.xml"></p>

    <p>То исправить это <a href="rg2://ytplay?time=10:10&link=KBEsVhJtudg">очень просто:</a>
    слайс, белых с желтыми меняем сверху и белых с желтыми меняем снизу, еще один слайс. Profit!</p>

    <p>Алгоритм: <b>/(6,6)/(-1,1)</b></p>

    <p>P.S. Алгоритм который меняет местами ТОЛЬКО ДВА ребра на верхней грани (переднее и правое):<br/>
    <b>/(-3,0)/(0,3)/(0,-3)/(0,3)/(2,0)/(0,2)/(-2,0)/(4,0)/(0,-2)/(0,2)/(-1,4)/(0,-3)/(0,3)</b></p>
    """;
    static const square_st7_url = "KBEsVhJtudg";

}
