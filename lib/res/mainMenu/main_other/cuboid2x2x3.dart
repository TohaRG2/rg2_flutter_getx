
import 'package:rg2/models/phases.dart';

class Cuboid2x2x3 implements Phase {
  @override
  int count = cub_2x2x3_title.length;

  @override
  String phase = "CUBOID_2X2X3";

  @override
  List<String> titles() => cub_2x2x3_title;

  @override
  List<String> icons() => cub_2x2x3_icon;

  @override
  List<String> descriptions() => cub_2x2x3_descr;

  @override
  List<String> urls() => cub_2x2x3_url;

  @override
  List<String> comments() => List.filled(count, "");

///==================================================


    static const cub_2x2x3_title = [
        cub_2x2x3_1_title,
        cub_2x2x3_2_title,
        cub_2x2x3_3_title,
        cub_2x2x3_4_title,
        cub_2x2x3_5_title,
    ];

    static const cub_2x2x3_icon = [
        "cub_2x2x3_1",
        "cub_2x2x3_2",
        "cub_2x2x3_3",
        "cub_2x2x3_4",
        "cub_2x2x3_5",
    ];

    static const cub_2x2x3_descr = [
        cub_2x2x3_1_descr,
        cub_2x2x3_2_descr,
        cub_2x2x3_3_descr,
        cub_2x2x3_4_descr,
        cub_2x2x3_5_descr,
    ];


    static const cub_2x2x3_url = [
        cub_2x2x3_1_url,
        cub_2x2x3_2_url,
        cub_2x2x3_3_url,
        cub_2x2x3_4_url,
        cub_2x2x3_5_url,
    ];

    static const cub_2x2x3_1_title = "Введение и язык вращений";
    static const cub_2x2x3_1_descr = """
    <p><a href="rg2://ytplay?time=0:26&link=4GPvVJ0-YwE">На первый взгляд</a>
    кубоид 2х2х3 представляет собой немного урезанный вариант обычного кубика
    3х3 и, кажется, что если знаешь, как собирать обычную трешку, то уж такой упрощенный вариант
    точно сможешь собрать. И первое, <a href="rg2://ytplay?time=0:48&link=4GPvVJ0-YwE">что хочется сделать</a>
    - это, конечно же, пиф-паф и вот тут-то
    понимаешь, что все не так просто, а все дело в том, что какая-то из граней вращается только
    на 180 градусов. Например, если взять этот кубоид вот так,</p>
    <p style="text-align:center"><img src="cub_2x2x3_1_1.xml"></p>

    <p>то это правая или левая грани. Вот и получается, что кубоиды это скорее разновидности скваеров,
    чем обычных кубиков, т.е. если мы представим, что это у нас скваер, то движение R2 -
    <a href="rg2://ytplay?time=1:53&link=4GPvVJ0-YwE">это будет слайс,</a> поэтому и формулы
    для этой головоломки я буду приводить в двух видах:</p>
    <p>1. На языке вращений кубика<br/>
    2. На языке вращений скваера</p>
    <p>выбирайте то, что вам будет понятнее.</p>

    <p>Например, кубоидный пиф-паф (по аналогии со скваерным) будет выглядеть вот так:</p>
    <p><a href="rg2://ytplay?time=2:13&link=4GPvVJ0-YwE&alg=(R2_U_R2_U’)">Алгоритм:</a> <b>(R2 U R2 U’)</b><br/>
    или <b>/(1,0)/(-1,0)</b></p>
    """;
    static const cub_2x2x3_1_url = "4GPvVJ0-YwE";


    static const cub_2x2x3_2_title = "Две стороны";
    static const cub_2x2x3_2_descr = """
    <p><a href="rg2://ytplay?time=2:30&link=4GPvVJ0-YwE">Первое, что нужно сделать</a>
    в сборке кубоида - поставить все белые части на одну сторону
    (ну или желтые), а противоположные сами собой соберутся. Для этого ищем какую-нибудь пару
    на верхней или нижней грани и берем кубоид так, чтобы эта пара оказалась
    <a href="rg2://ytplay?time=3:02&link=4GPvVJ0-YwE">снизу слева.</a>
    И теперь, вращая только правую и верхнюю грани, мы легко можем поставить все белые или
    желтые элементы вместе. Для этого нам надо всего лишь составить пару такого же цвета,
    как пара слева снизу, но сначала на верхней грани, а потом уже поставить эту пару на
    правую грань и слайсом опустить вниз.</p>

    <p>Если же после разборки кубоида у вас получилась ситуация, когда ни на верхней, ни на
    нижней грани <a href="rg2://ytplay?time=4:17&link=4GPvVJ0-YwE">ни одной пары нет,</a></p>
    <p style="text-align:center"><img src="cub_2x2x3_2_1.xml"></p>

    <p>то ситуацию легко исправить  <a href="rg2://ytplay?time=4:29&link=4GPvVJ0-YwE">при помощи слайса.</a>
    А если слайс не меняет ситуацию,
    то нужно повернуть верхнюю или нижнюю грань в любую сторону на 90 градусов и сделать еще один
    слайс, получим две разные пары сверху и две разные пары снизу, которые уже легко поставить
    на свои места. Для этого всего лишь надо поставить их и сверху, и снизу вертикально, а затем
    сделать слайс.</p>

    <p>Также этот этап очень похож на этап сборки центров в кубике 4х4.</p>

    <p><i>Если вам из текста что-то непонятно, не сочтите за труд пощелкать по ссылкам в нем
    и посмотреть этот момент в видео.</i></p>
    """;
    static const cub_2x2x3_2_url = "4GPvVJ0-YwE";

    static const cub_2x2x3_3_title = "Два слоя";
    static const cub_2x2x3_3_descr = """
    <p>После того, как верхняя и нижняя стороны покрашены в один цвет, необходимо расставить
    элементы на каждой из этих сторон <a href="rg2://ytplay?time=5:09&link=4GPvVJ0-YwE">на свои места.</a>
    Для этого воспользуемся одним очень простым,
    можно сказать, интуитивным алгоритмом, который меняет местами
    <a href="rg2://ytplay?time=5:40&link=4GPvVJ0-YwE">два элемента на нижнем слое.</a>
    Поднимем пару с нижнего слоя наверх (R2), уведем один из элементов пары налево (U), а второй вниз (R2).
    Теперь вернем верхний элемент на правую грань (U’) и поменяем местами с нижним (R2), теперь уже этот
    поднятый элемент поставим направо (U) и вернем нижний элемент наверх (R2), получим пару, которую
    ставим на правую грань (U’) и ставим на свое место вниз (R2). По сути,
    <a href="rg2://ytplay?time=5:40&link=4GPvVJ0-YwE">делаем два кубоидных пиф-пафа</a> и слайс.</p>

    <p><a href="rg2://ytplay?time=6:27&link=4GPvVJ0-YwE&alg=(R2_U_R2_U’)_(R2_U_R2_U’)_R2">Алгоритм:</a> <b>(R2 U R2 U’) (R2 U R2 U’) R2</b><br/>
    или <b>/(1,0)/(-1,0)/(1,0)/(-1,0)/</b></p>

    <p>Этот алгоритм <a href="rg2://ytplay?time=6:34&link=4GPvVJ0-YwE">меняет местами</a> не только
    два нижних правых элемента местами, но еще и два стоящих наискосок элемента верхней грани, и
    два правых элемента среднего слоя.</p>
    <p style="text-align:center"><img src="cub_2x2x3_3_1.xml"></p>

    <p>Элементы среднего слоя нас пока не интересуют, а вот то, что меняются еще и элементы
    верхнего слоя <a href="rg2://ytplay?time=6:51&link=4GPvVJ0-YwE">кажется не очень удобным,</a>
    но на самом деле это не только не усложняет, а зачастую и упрощает сборку кубоида. Поэтому
    назовем этот алгоритм <b>базовым</b>, для сборки кубоида.</p>

    <p><a href="rg2://ytplay?time=7:08&link=4GPvVJ0-YwE">Как же его применять для сборки?</a></p>

    <p>На этом этапе ищем какие-нибудь «глазки» на верхнем и нижнем слое кубоида. Надеюсь, что вы уже
    умеете собирать обычный кубик по моей методике или методике А.Кима,
    <a href="rg2://ytplay?time=7:29&link=4GPvVJ0-YwE">а значит понимаете,</a> что
    если глазок нет ни с одной стороны, то надо переставить два любых элемента на этом слое по
    диагонали. Если есть одни глазки, то переставить два элемента, которые не входят в эти глазки.
    Ну и если глазок больше, чем одна штука, значит они со всех четырех сторон, и переставлять
    ничего не требуется.</p>

    <p>Как по любым двум сторонам грани определить есть ли на ней «глазки» или нет
    <a href="rg2://ytplay?time=8:23&link=4GPvVJ0-YwE">смотрите в видео.</a></p>

    <p>В зависимости от того, как расположены глазки на верхнем и нижнем слое, возможны всего лишь
    <a href="rg2://ytplay?time=9:06&link=4GPvVJ0-YwE"><b>8 ситуаций</b>,</a> любую из которых
    можно решить при помощи нашего базового алгоритма.</p>

    <p><i>В приведенных ниже иллюстрациях будем считать, что желтая сторона у нас сверху, а белая снизу.</i></p>

    <p><b>1. <a href="rg2://ytplay?time=9:23&link=4GPvVJ0-YwE">Сверху нет глазок, снизу глазки.</b></a></p>
    <p style="text-align:center"><img src="cub_2x2x3_3_2.xml"></p>

    <p>Самый простой вариант, взять кубоид нижними глазками налево и выполнить алгоритм один раз.</p>
    <p><a href="rg2://ytplay?time=9:48&link=4GPvVJ0-YwE&alg=(R2_U_R2_U’)(R2_U_R2_U’)R2">Алгоритм:</a> <b>(R2 U R2 U’)(R2 U R2 U’)R2</b><br/>
    или <b>/(1,0)/(-1,0)/(1,0)/(-1,0)/</b></p>

    <p><b>2. <a href="rg2://ytplay?time=10:08&link=4GPvVJ0-YwE">Сверху глазки, снизу нет глазок.</b></a></p>
    <p style="text-align:center"><img src="cub_2x2x3_3_3.xml"></p>

    <p>Все аналогично предыдущему случаю, надо только перевернуть кубоид белой стороной вверх (x2).</p>
    <p><a href="rg2://ytplay?time=10:20&link=4GPvVJ0-YwE&alg=x2_(R2_U_R2_U’)(R2_U_R2_U’)_R2">Алгоритм:</a> <b>x2 (R2 U R2 U’)(R2 U R2 U’) R2</b><br/>
    или <b>x2/(1,0)/(-1,0)/(1,0)/(-1,0)/</b></p>

    <p><b>3. <a href="rg2://ytplay?time=10:41&link=4GPvVJ0-YwE">И сверху, и снизу глазки</b></a></p>
    <p style="text-align:center"><img src="cub_2x2x3_3_4.xml"></p>

    <p>Сначала нам нужно привести ситуацию к одной из предыдущих. И тут надо понимать, что
    диагональная перестановка (на верхней грани) с глазками ничего не делает, т.е. если сверху были
    глазки, то после выполнения алгоритма там и останутся глазки. А перестановка двух соседних
    элементов (на нижней грани) может сделать из глазок собранную грань, а может сделать
    несобранную грань без глазок, для этого надо всего лишь поменять местами элементы глазок.
    Т.е. берем головоломку нижними глазками направо, верхними от себя и делаем алгоритм, получаем ситуацию N2,
    соответственно переворачиваем кубоид (x2), нижняя грань должна встать глазками налево и выполняем
    алгоритм еще раз.</p>
    <p><a href="rg2://ytplay?time=12:00&link=4GPvVJ0-YwE&alg=(Алгоритм)_x2_(Алгоритм)">Алгоритм:</a> <b>(Алгоритм) x2 (Алгоритм)</b></p>

    <p><b>4. <a href="rg2://ytplay?time=12:44&link=4GPvVJ0-YwE">Сверху все собрано, а снизу глазки</b></a></p>
    <p style="text-align:center"><img src="cub_2x2x3_3_5.xml"></p>

    <p>В этом случае, нам надо сделать так, чтобы после первого выполнения алгоритма снизу как были,
    так и остались глазки. Для этого берем  головоломку нижними глазками к себе, выполняем алгоритм,
    получим ситуацию, когда сверху нет глазок, а снизу глазки смотрят от нас, поэтому либо повернем
    нижнюю грань, либо сделаем перехват так, чтобы нижние глазки оказались слева и выполним алгоритм
    еще раз.</p>
    <p><a href="rg2://ytplay?time=13:27&link=4GPvVJ0-YwE&alg=(Алгоритм)_D_(Алгоритм)">Алгоритм:</a> (Алгоритм) D (Алгоритм)</p>

    <p><b>5. <a href="rg2://ytplay?time=13:54&link=4GPvVJ0-YwE">Сверху все собрано, а снизу нет глазок</b></a></p>
    <p style="text-align:center"><img src="cub_2x2x3_3_6.xml"></p>

    <p>Все очень похоже на предыдущий случай, выполняем алгоритм два раза. Но чтобы собрать нижнюю
    грань из такого положения между алгоритмами будем вращать нижнюю грань дважды.</p>
    <p><a href="rg2://ytplay?time=14:07&link=4GPvVJ0-YwE&alg=(Алгоритм)_D2_(Алгоритм)">Алгоритм:</a> (Алгоритм) D2 (Алгоритм)</p>

    <p><b>6. <a href="rg2://ytplay?time=14:33&link=4GPvVJ0-YwE">Сверху глазки, снизу собрано</b></a></p>
    <p style="text-align:center"><img src="cub_2x2x3_3_7.xml"></p>

    <p>Поскольку диагональная перестановка (сверху) ничего не может сделать с глазками, то просто
    переворачиваем головоломку и получаем ситуацию N4.</p>
    <p><a href="rg2://ytplay?time=14:40&link=4GPvVJ0-YwE&alg=z2_(Алгоритм)_D_(Алгоритм)">Алгоритм:</a> z2 (Алгоритм) D (Алгоритм)</p>

    <p><b>7. <a href="rg2://ytplay?time=15:15&link=4GPvVJ0-YwE">Сверху нет глазок, а снизу собрано</b></a></p>
    <p style="text-align:center"><img src="cub_2x2x3_3_8.xml"></p>

    <p>Первое желание просто выполнить алгоритм, тем самым собрав верхнюю сторону, но тогда мы
    получим ситуацию N4, и нам придется выполнить алгоритм еще два раза, поэтому лучше просто
    перевернуть головоломку и получить ситуацию N5.</p>
    <p><a href="rg2://ytplay?time=15:20&link=4GPvVJ0-YwE&alg=z2_(Алгоритм)_D2_(Алгоритм)">Алгоритм:</a> z2 (Алгоритм) D2 (Алгоритм)</p>

    <p><b>8. <a href="rg2://ytplay?time=15:40&link=4GPvVJ0-YwE">Глазок нет ни сверху, ни снизу</b></a></p>
    <p style="text-align:center"><img src="cub_2x2x3_3_9.xml"></p>

    <p>Самый сложный случай, если выполнять через универсальный алгоритм, и самый простой случай,
    если использовать специальный алгоритм, который я приведу в ускорениях для этой головоломки.
    Выполняем алгоритм, получаем ситуацию N4, которую уже знаем, как решать.</p>
    <p><a href="rg2://ytplay?time=16:04&link=4GPvVJ0-YwE&alg=(Алгоритм)_D’_(Алгоритм)_D_(Алгоритм)">Алгоритм:</a> (Алгоритм) D’ (Алгоритм) D (Алгоритм)</p>

    """;
    static const cub_2x2x3_3_url = "4GPvVJ0-YwE";


    static const cub_2x2x3_4_title = "Средний слой";
    static const cub_2x2x3_4_descr = """
    <p>Ну и теперь осталось только поставить на свои места
    <a href="rg2://ytplay?time=16:45&link=4GPvVJ0-YwE">элементы среднего слоя.</a></p>

    <p>На этом этапе можно решить любую ситуацию при помощи вышеприведенного
    универсального алгоритма, но лучше воспользоваться более простым и быстрым из
    методики для скваера.</p>
    <p>Выглядит алгоритм <a href="rg2://ytplay?time=17:51&link=4GPvVJ0-YwE">вот так:</a> <b>R2 U2 R2 U2 R2</b><br/>
    или <b>/(2,0)/(2,0)/</b></p>
    <p style="text-align:center"><img src="cub_2x2x3_4_1.xml"></p>

    <p>и переставляет местами только два правых элемента среднего слоя.</p>

    <p>Тут возможно всего лишь 4 ситуации:</p>

    <p><b>1. <a href="rg2://ytplay?time=18:17&link=4GPvVJ0-YwE">С двух сторон глазки</b></a></p>
    <p style="text-align:center"><img src="cub_2x2x3_4_2.xml"></p>

    <p>Совместить глазки среднего слоя с такими же глазками на нижней грани. У одних глазок смежные
    наклейки будут дружить с наклейками на нижней грани, а у других нет. Поэтому нужно взять
    головоломку так, чтобы «дружные глазки» смотрели налево и выполнить простой алгоритм.</p>
    <p><a href="rg2://ytplay?time=18:59&link=4GPvVJ0-YwE&alg=R2_U2_R2_U2_R2_или_/(2,0)/(2,0)/">Алгоритм:</a> R2 U2 R2 U2 R2 или /(2,0)/(2,0)/</p>

    <p><b>2. <a href="rg2://ytplay?time=19:12&link=4GPvVJ0-YwE">Глазок нет ни с одной стороны</b></a></p>
    <p>Таких ситуаций может быть две и различать их не так то просто.</p>

    <p><a href="rg2://ytplay?time=19:35&link=4GPvVJ0-YwE">Чтобы отличить</a>
    ситуацию 2.1 от ситуации 2.2, попробуйте сделать слайсы на смежных гранях
    и посмотреть на то, изменяются ли элементы среднего слоя. Если элементы не меняются, значит это
    ситуация 2.1, а если при одном из слайсов меняются, то 2.2.</p>

    <p>2.1. <a href="rg2://ytplay?time=20:05&link=4GPvVJ0-YwE">Все противоположные элементы среднего слоя одинакового цвета</a></p>
    <p style="text-align:center"><img src="cub_2x2x3_4_3.xml"></p>

    <p>В этой ситуации из любого положения делаем наш простой алгоритм и получаем ситуацию 2.2. Как
    ее решать см.далее.</p>

    <p>2.2. <a href="rg2://ytplay?time=20:33&link=4GPvVJ0-YwE">Два противоположных элемента среднего слоя одинакового цвета, а два разного</a></p>
    <p style="text-align:center"><img src="cub_2x2x3_4_4.xml"></p>

    <p>В этом случае взять нужно так, чтобы разные противоположные элементы находились на передней
    и задней гранях, т.е. слайс менял ситуацию на среднем слое, и выполнить простой алгоритм.
    Получим глазки с двух сторон, т.е. ситуацию N1, которую уже знаем как решать.</p>

    <p><b>3. <a href="rg2://ytplay?time=22:14&link=4GPvVJ0-YwE">Глазки со всех четырех сторон, но не совпадают с верхней и нижней гранями</b></a></p>
    <p style="text-align:center"><img src="cub_2x2x3_4_5.xml"></p>

    <p>Если на среднем слое со всех сторон глазки, но с двух сторон они совпадают с цветами на нижней
    грани, а с двух других сторон не совпадают, то в этом случае надо переставить местами сначала
    правую, а потом левую пару, т.е. сначала выполнить простой алгоритм из любого положения справа,
    а потом слева.</p>
    <p><a href="rg2://ytplay?time=16:04&link=4GPvVJ0-YwE&alg=(R2_U2_R2_U2_R2)(L2_U2_L2_U2_L2)">Алгоритм:</a> <b>(R2 U2 R2 U2 R2)(L2 U2 L2 U2 L2)</b></p>

    """;
    static const cub_2x2x3_4_url = "4GPvVJ0-YwE";

    static const cub_2x2x3_5_title = "Ускорения";
    static const cub_2x2x3_5_descr = """
    <p>Ускорения для кубоида 2х2х3</p>

    <p>В ускорениях будем использовать вращение не только правой, но и передней грани, поэтому язык
    вращений скваера уже не очень подходит и будем использовать только язык вращений обычного кубика.</p>

    <p>1. <a href="rg2://ytplay?time=23:25&link=4GPvVJ0-YwE">Первое ускорение</a> для, казалось
    бы, сложной ситуации, когда на этапе сборки
    верхней и нижней граней, ни там, ни там нет глазок. Алгоритм хорошо знаком тем, кто умеет собирать
    кубик 2х2 по методу Ортега, и там эта ситуация не зря является самой любимой, ведь алгоритм очень простой.</p>
    <p style="text-align:center"><img src="cub_2x2x3_5_1.xml"></p>

    <p><a href="rg2://ytplay?time=24:13&link=4GPvVJ0-YwE&alg=R2_F2_R2">Алгоритм:</a> <b>R2 F2 R2</b></p>

    <p>2. <a href="rg2://ytplay?time=24:37&link=4GPvVJ0-YwE">Второе ускорение</a>
    опять же из метода Ортега для 2х2, и связано оно с ситуацией, когда и сверху,
    и снизу глазки. В этом случае нужно отвернуть обе грани глазками от себя и выполнить вот такой
    несложный алгоритм:</p>
    <p style="text-align:center"><img src="cub_2x2x3_5_2.xml"></p>

    <p><a href="rg2://ytplay?time=25:04&link=4GPvVJ0-YwE&alg=R2_U’_(R2_U2_F2)_U’_R2">Алгоритм:</a> <b>R2 U’ (R2 U2 F2) U’ R2</b></p>

    <p>3. <a href="rg2://ytplay?time=25:18&link=4GPvVJ0-YwE">Третье ускорение</a> для сборки среднего слоя.</p>
    <p style="text-align:center"><img src="cub_2x2x3_5_3.xml"></p>

    <p>Если у вас на среднем слое нет глазок, то выполните вот такой
    <a href="rg2://ytplay?time=25:48&link=4GPvVJ0-YwE">простой алгоритм</a> <b>R2 E R2</b>
    и у вас либо все соберется, либо получится простая ситуация с двумя глазками.</p>

    <p>4. Ну и <a href="rg2://ytplay?time=26:17&link=4GPvVJ0-YwE">последнее ускорение</a>
    для ситуации, когда средний слой собран, но ориентирован неправильно.
    Можно конечно разворачивать средний слой, а можно просто поменять местами верхний и нижний,
    как это делается в скваерах.</p>
    <p style="text-align:center"><img src="cub_2x2x3_5_4.xml"></p>

    <p><a href="rg2://ytplay?time=26:40&link=4GPvVJ0-YwE&alg=R2_U2_D2_R2">Алгоритм:</a> <b>R2 U2 D2 R2</b> или <b>R2 E2 R2</b></p>

    """;
    static const cub_2x2x3_5_url = "4GPvVJ0-YwE";


}
